// Code generated by ent, DO NOT EDIT.

package portrait

import (
	"step/internal/data/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id uint64) predicate.Portrait {
	return predicate.Portrait(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint64) predicate.Portrait {
	return predicate.Portrait(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint64) predicate.Portrait {
	return predicate.Portrait(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint64) predicate.Portrait {
	return predicate.Portrait(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint64) predicate.Portrait {
	return predicate.Portrait(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint64) predicate.Portrait {
	return predicate.Portrait(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint64) predicate.Portrait {
	return predicate.Portrait(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint64) predicate.Portrait {
	return predicate.Portrait(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint64) predicate.Portrait {
	return predicate.Portrait(sql.FieldLTE(FieldID, id))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v string) predicate.Portrait {
	return predicate.Portrait(sql.FieldEQ(FieldUserID, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v string) predicate.Portrait {
	return predicate.Portrait(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v string) predicate.Portrait {
	return predicate.Portrait(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...string) predicate.Portrait {
	return predicate.Portrait(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...string) predicate.Portrait {
	return predicate.Portrait(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v string) predicate.Portrait {
	return predicate.Portrait(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v string) predicate.Portrait {
	return predicate.Portrait(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v string) predicate.Portrait {
	return predicate.Portrait(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v string) predicate.Portrait {
	return predicate.Portrait(sql.FieldLTE(FieldUserID, v))
}

// UserIDContains applies the Contains predicate on the "user_id" field.
func UserIDContains(v string) predicate.Portrait {
	return predicate.Portrait(sql.FieldContains(FieldUserID, v))
}

// UserIDHasPrefix applies the HasPrefix predicate on the "user_id" field.
func UserIDHasPrefix(v string) predicate.Portrait {
	return predicate.Portrait(sql.FieldHasPrefix(FieldUserID, v))
}

// UserIDHasSuffix applies the HasSuffix predicate on the "user_id" field.
func UserIDHasSuffix(v string) predicate.Portrait {
	return predicate.Portrait(sql.FieldHasSuffix(FieldUserID, v))
}

// UserIDEqualFold applies the EqualFold predicate on the "user_id" field.
func UserIDEqualFold(v string) predicate.Portrait {
	return predicate.Portrait(sql.FieldEqualFold(FieldUserID, v))
}

// UserIDContainsFold applies the ContainsFold predicate on the "user_id" field.
func UserIDContainsFold(v string) predicate.Portrait {
	return predicate.Portrait(sql.FieldContainsFold(FieldUserID, v))
}

// DimensionEQ applies the EQ predicate on the "dimension" field.
func DimensionEQ(v Dimension) predicate.Portrait {
	return predicate.Portrait(sql.FieldEQ(FieldDimension, v))
}

// DimensionNEQ applies the NEQ predicate on the "dimension" field.
func DimensionNEQ(v Dimension) predicate.Portrait {
	return predicate.Portrait(sql.FieldNEQ(FieldDimension, v))
}

// DimensionIn applies the In predicate on the "dimension" field.
func DimensionIn(vs ...Dimension) predicate.Portrait {
	return predicate.Portrait(sql.FieldIn(FieldDimension, vs...))
}

// DimensionNotIn applies the NotIn predicate on the "dimension" field.
func DimensionNotIn(vs ...Dimension) predicate.Portrait {
	return predicate.Portrait(sql.FieldNotIn(FieldDimension, vs...))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Portrait) predicate.Portrait {
	return predicate.Portrait(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Portrait) predicate.Portrait {
	return predicate.Portrait(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Portrait) predicate.Portrait {
	return predicate.Portrait(sql.NotPredicates(p))
}
