// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AwardsColumns holds the columns for the "awards" table.
	AwardsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "user_id", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"setted", "achieved", "realized"}, Default: "setted"},
		{Name: "description", Type: field.TypeString},
		{Name: "setted_files", Type: field.TypeJSON, Nullable: true},
		{Name: "realized_files", Type: field.TypeJSON, Nullable: true},
		{Name: "target_type", Type: field.TypeEnum, Enums: []string{"portrait", "target"}},
		{Name: "scope", Type: field.TypeString},
		{Name: "dimension", Type: field.TypeString},
		{Name: "threshold", Type: field.TypeInt32},
		{Name: "setted_at", Type: field.TypeInt64, Default: 1759113438},
		{Name: "achieved_at", Type: field.TypeInt64, Nullable: true},
		{Name: "realized_at", Type: field.TypeInt64, Nullable: true},
	}
	// AwardsTable holds the schema information for the "awards" table.
	AwardsTable = &schema.Table{
		Name:       "awards",
		Columns:    AwardsColumns,
		PrimaryKey: []*schema.Column{AwardsColumns[0]},
	}
	// PortraitsColumns holds the columns for the "portraits" table.
	PortraitsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "user_id", Type: field.TypeString},
		{Name: "dimension", Type: field.TypeEnum, Enums: []string{"basic", "self_discipline", "target_and_execution", "learning_and_growth"}},
		{Name: "value", Type: field.TypeJSON},
	}
	// PortraitsTable holds the schema information for the "portraits" table.
	PortraitsTable = &schema.Table{
		Name:       "portraits",
		Columns:    PortraitsColumns,
		PrimaryKey: []*schema.Column{PortraitsColumns[0]},
	}
	// ShowsColumns holds the columns for the "shows" table.
	ShowsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "type", Type: field.TypeString},
		{Name: "poster", Type: field.TypeString, Nullable: true},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "media_files", Type: field.TypeJSON, Nullable: true},
		{Name: "created_at", Type: field.TypeInt64, Default: 1759113438},
	}
	// ShowsTable holds the schema information for the "shows" table.
	ShowsTable = &schema.Table{
		Name:       "shows",
		Columns:    ShowsColumns,
		PrimaryKey: []*schema.Column{ShowsColumns[0]},
	}
	// ShowReservesColumns holds the columns for the "show_reserves" table.
	ShowReservesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "user_id", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"recommend", "reserved", "completed"}, Default: "recommend"},
		{Name: "memories", Type: field.TypeJSON, Nullable: true},
		{Name: "created_at", Type: field.TypeInt64, Default: 1759113438},
		{Name: "ref_show_id", Type: field.TypeUint64, Nullable: true},
	}
	// ShowReservesTable holds the schema information for the "show_reserves" table.
	ShowReservesTable = &schema.Table{
		Name:       "show_reserves",
		Columns:    ShowReservesColumns,
		PrimaryKey: []*schema.Column{ShowReservesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "show_reserves_shows_show_reserves",
				Columns:    []*schema.Column{ShowReservesColumns[5]},
				RefColumns: []*schema.Column{ShowsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// StepsColumns holds the columns for the "steps" table.
	StepsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "title", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "is_challenge", Type: field.TypeBool, Default: false},
		{Name: "teacher_comment", Type: field.TypeJSON, Nullable: true},
		{Name: "parent_comment", Type: field.TypeJSON, Nullable: true},
		{Name: "friend_comment", Type: field.TypeJSON, Nullable: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"image", "video", "audio", "dir"}},
		{Name: "object_name", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "created_at", Type: field.TypeInt64, Default: 1759113438},
		{Name: "parent_id", Type: field.TypeUint64, Nullable: true},
		{Name: "ref_target_id", Type: field.TypeUint64, Nullable: true},
	}
	// StepsTable holds the schema information for the "steps" table.
	StepsTable = &schema.Table{
		Name:       "steps",
		Columns:    StepsColumns,
		PrimaryKey: []*schema.Column{StepsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "steps_steps_children",
				Columns:    []*schema.Column{StepsColumns[10]},
				RefColumns: []*schema.Column{StepsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "steps_targets_steps",
				Columns:    []*schema.Column{StepsColumns[11]},
				RefColumns: []*schema.Column{TargetsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// StepRatesColumns holds the columns for the "step_rates" table.
	StepRatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "user_id", Type: field.TypeString},
		{Name: "top_target_id", Type: field.TypeUint64},
		{Name: "target_id", Type: field.TypeUint64},
		{Name: "step_id", Type: field.TypeUint64, Unique: true},
		{Name: "weighted_value", Type: field.TypeFloat64},
		{Name: "target_reasonableness", Type: field.TypeInt32},
		{Name: "target_clarity", Type: field.TypeInt32},
		{Name: "target_achievement", Type: field.TypeInt32},
		{Name: "reflection_improvement", Type: field.TypeInt32},
		{Name: "innovation", Type: field.TypeInt32},
		{Name: "basic_reliability", Type: field.TypeInt32},
		{Name: "skill_improvement", Type: field.TypeInt32},
		{Name: "difficulty", Type: field.TypeInt32},
		{Name: "date", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "date", "postgres": "date", "sqlite3": "date"}},
	}
	// StepRatesTable holds the schema information for the "step_rates" table.
	StepRatesTable = &schema.Table{
		Name:       "step_rates",
		Columns:    StepRatesColumns,
		PrimaryKey: []*schema.Column{StepRatesColumns[0]},
	}
	// TargetsColumns holds the columns for the "targets" table.
	TargetsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "user_id", Type: field.TypeString},
		{Name: "title", Type: field.TypeString, Size: 50},
		{Name: "description", Type: field.TypeString, Size: 500},
		{Name: "type", Type: field.TypeString, Default: "default"},
		{Name: "created_at", Type: field.TypeInt64, Default: 1759113438},
		{Name: "start_at", Type: field.TypeInt64, Nullable: true},
		{Name: "challenge_at", Type: field.TypeInt64, Nullable: true},
		{Name: "done_at", Type: field.TypeInt64, Nullable: true},
		{Name: "layer", Type: field.TypeUint32, Default: 0},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"init", "step", "step_hard", "done"}, Default: "init"},
		{Name: "parent_id", Type: field.TypeUint64, Nullable: true},
	}
	// TargetsTable holds the schema information for the "targets" table.
	TargetsTable = &schema.Table{
		Name:       "targets",
		Columns:    TargetsColumns,
		PrimaryKey: []*schema.Column{TargetsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "targets_targets_children",
				Columns:    []*schema.Column{TargetsColumns[11]},
				RefColumns: []*schema.Column{TargetsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AwardsTable,
		PortraitsTable,
		ShowsTable,
		ShowReservesTable,
		StepsTable,
		StepRatesTable,
		TargetsTable,
	}
)

func init() {
	ShowReservesTable.ForeignKeys[0].RefTable = ShowsTable
	StepsTable.ForeignKeys[0].RefTable = StepsTable
	StepsTable.ForeignKeys[1].RefTable = TargetsTable
	TargetsTable.ForeignKeys[0].RefTable = TargetsTable
}
