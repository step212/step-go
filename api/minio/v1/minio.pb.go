// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.0
// source: minio/v1/minio.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	_ "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetUploadPreSignedUrlRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadKey     string                 `protobuf:"bytes,1,opt,name=upload_key,proto3" json:"upload_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUploadPreSignedUrlRequest) Reset() {
	*x = GetUploadPreSignedUrlRequest{}
	mi := &file_minio_v1_minio_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUploadPreSignedUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUploadPreSignedUrlRequest) ProtoMessage() {}

func (x *GetUploadPreSignedUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minio_v1_minio_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUploadPreSignedUrlRequest.ProtoReflect.Descriptor instead.
func (*GetUploadPreSignedUrlRequest) Descriptor() ([]byte, []int) {
	return file_minio_v1_minio_proto_rawDescGZIP(), []int{0}
}

func (x *GetUploadPreSignedUrlRequest) GetUploadKey() string {
	if x != nil {
		return x.UploadKey
	}
	return ""
}

type GetUploadPreSignedUrlReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUploadPreSignedUrlReply) Reset() {
	*x = GetUploadPreSignedUrlReply{}
	mi := &file_minio_v1_minio_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUploadPreSignedUrlReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUploadPreSignedUrlReply) ProtoMessage() {}

func (x *GetUploadPreSignedUrlReply) ProtoReflect() protoreflect.Message {
	mi := &file_minio_v1_minio_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUploadPreSignedUrlReply.ProtoReflect.Descriptor instead.
func (*GetUploadPreSignedUrlReply) Descriptor() ([]byte, []int) {
	return file_minio_v1_minio_proto_rawDescGZIP(), []int{1}
}

func (x *GetUploadPreSignedUrlReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetDownloadPreSignedUrlRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DownloadKey   string                 `protobuf:"bytes,1,opt,name=download_key,proto3" json:"download_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDownloadPreSignedUrlRequest) Reset() {
	*x = GetDownloadPreSignedUrlRequest{}
	mi := &file_minio_v1_minio_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDownloadPreSignedUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDownloadPreSignedUrlRequest) ProtoMessage() {}

func (x *GetDownloadPreSignedUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_minio_v1_minio_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDownloadPreSignedUrlRequest.ProtoReflect.Descriptor instead.
func (*GetDownloadPreSignedUrlRequest) Descriptor() ([]byte, []int) {
	return file_minio_v1_minio_proto_rawDescGZIP(), []int{2}
}

func (x *GetDownloadPreSignedUrlRequest) GetDownloadKey() string {
	if x != nil {
		return x.DownloadKey
	}
	return ""
}

type GetDownloadPreSignedUrlReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDownloadPreSignedUrlReply) Reset() {
	*x = GetDownloadPreSignedUrlReply{}
	mi := &file_minio_v1_minio_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDownloadPreSignedUrlReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDownloadPreSignedUrlReply) ProtoMessage() {}

func (x *GetDownloadPreSignedUrlReply) ProtoReflect() protoreflect.Message {
	mi := &file_minio_v1_minio_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDownloadPreSignedUrlReply.ProtoReflect.Descriptor instead.
func (*GetDownloadPreSignedUrlReply) Descriptor() ([]byte, []int) {
	return file_minio_v1_minio_proto_rawDescGZIP(), []int{3}
}

func (x *GetDownloadPreSignedUrlReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_minio_v1_minio_proto protoreflect.FileDescriptor

var file_minio_v1_minio_proto_rawDesc = string([]byte{
	0x0a, 0x14, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3e, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x65, 0x53, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x22, 0x2e, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x65, 0x53, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x44, 0x0a, 0x1e,
	0x47, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x65, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6b,
	0x65, 0x79, 0x22, 0x30, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x50, 0x72, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x32, 0xa9, 0x02, 0x0a, 0x05, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x12, 0x8a,
	0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x65, 0x53,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x65,
	0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x72,
	0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b,
	0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x2f, 0x70, 0x72, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x92, 0x01, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x65, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72,
	0x65, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1f, 0x12, 0x1d, 0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x2f, 0x70, 0x72, 0x65, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x2f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c,
	0x42, 0x3e, 0x0a, 0x17, 0x64, 0x65, 0x76, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x53, 0x74, 0x65,
	0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x14, 0x73, 0x74, 0x65, 0x70,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_minio_v1_minio_proto_rawDescOnce sync.Once
	file_minio_v1_minio_proto_rawDescData []byte
)

func file_minio_v1_minio_proto_rawDescGZIP() []byte {
	file_minio_v1_minio_proto_rawDescOnce.Do(func() {
		file_minio_v1_minio_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_minio_v1_minio_proto_rawDesc), len(file_minio_v1_minio_proto_rawDesc)))
	})
	return file_minio_v1_minio_proto_rawDescData
}

var file_minio_v1_minio_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_minio_v1_minio_proto_goTypes = []any{
	(*GetUploadPreSignedUrlRequest)(nil),   // 0: minio.v1.GetUploadPreSignedUrlRequest
	(*GetUploadPreSignedUrlReply)(nil),     // 1: minio.v1.GetUploadPreSignedUrlReply
	(*GetDownloadPreSignedUrlRequest)(nil), // 2: minio.v1.GetDownloadPreSignedUrlRequest
	(*GetDownloadPreSignedUrlReply)(nil),   // 3: minio.v1.GetDownloadPreSignedUrlReply
}
var file_minio_v1_minio_proto_depIdxs = []int32{
	0, // 0: minio.v1.Minio.GetUploadPreSignedUrl:input_type -> minio.v1.GetUploadPreSignedUrlRequest
	2, // 1: minio.v1.Minio.GetDownloadPreSignedUrl:input_type -> minio.v1.GetDownloadPreSignedUrlRequest
	1, // 2: minio.v1.Minio.GetUploadPreSignedUrl:output_type -> minio.v1.GetUploadPreSignedUrlReply
	3, // 3: minio.v1.Minio.GetDownloadPreSignedUrl:output_type -> minio.v1.GetDownloadPreSignedUrlReply
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_minio_v1_minio_proto_init() }
func file_minio_v1_minio_proto_init() {
	if File_minio_v1_minio_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_minio_v1_minio_proto_rawDesc), len(file_minio_v1_minio_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_minio_v1_minio_proto_goTypes,
		DependencyIndexes: file_minio_v1_minio_proto_depIdxs,
		MessageInfos:      file_minio_v1_minio_proto_msgTypes,
	}.Build()
	File_minio_v1_minio_proto = out.File
	file_minio_v1_minio_proto_goTypes = nil
	file_minio_v1_minio_proto_depIdxs = nil
}
