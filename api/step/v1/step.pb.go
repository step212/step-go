// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.0
// source: step/v1/step.proto

package v1

import (
	_ "github.com/google/gnostic/openapiv3"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTargetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	ParentId      uint64                 `protobuf:"varint,4,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTargetRequest) Reset() {
	*x = CreateTargetRequest{}
	mi := &file_step_v1_step_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTargetRequest) ProtoMessage() {}

func (x *CreateTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTargetRequest.ProtoReflect.Descriptor instead.
func (*CreateTargetRequest) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTargetRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateTargetRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateTargetRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateTargetRequest) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

type CreateTargetReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Layer         uint32                 `protobuf:"varint,2,opt,name=layer,proto3" json:"layer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTargetReply) Reset() {
	*x = CreateTargetReply{}
	mi := &file_step_v1_step_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTargetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTargetReply) ProtoMessage() {}

func (x *CreateTargetReply) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTargetReply.ProtoReflect.Descriptor instead.
func (*CreateTargetReply) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTargetReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateTargetReply) GetLayer() uint32 {
	if x != nil {
		return x.Layer
	}
	return 0
}

type UpdateTargetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTargetRequest) Reset() {
	*x = UpdateTargetRequest{}
	mi := &file_step_v1_step_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTargetRequest) ProtoMessage() {}

func (x *UpdateTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTargetRequest.ProtoReflect.Descriptor instead.
func (*UpdateTargetRequest) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateTargetRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTargetRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateTargetRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UpdateTargetReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTargetReply) Reset() {
	*x = UpdateTargetReply{}
	mi := &file_step_v1_step_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTargetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTargetReply) ProtoMessage() {}

func (x *UpdateTargetReply) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTargetReply.ProtoReflect.Descriptor instead.
func (*UpdateTargetReply) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateTargetReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteTargetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTargetRequest) Reset() {
	*x = DeleteTargetRequest{}
	mi := &file_step_v1_step_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTargetRequest) ProtoMessage() {}

func (x *DeleteTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTargetRequest.ProtoReflect.Descriptor instead.
func (*DeleteTargetRequest) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteTargetRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteTargetReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTargetReply) Reset() {
	*x = DeleteTargetReply{}
	mi := &file_step_v1_step_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTargetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTargetReply) ProtoMessage() {}

func (x *DeleteTargetReply) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTargetReply.ProtoReflect.Descriptor instead.
func (*DeleteTargetReply) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteTargetReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DoneTargetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DoneTargetRequest) Reset() {
	*x = DoneTargetRequest{}
	mi := &file_step_v1_step_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DoneTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoneTargetRequest) ProtoMessage() {}

func (x *DoneTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoneTargetRequest.ProtoReflect.Descriptor instead.
func (*DoneTargetRequest) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{6}
}

func (x *DoneTargetRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DoneTargetReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DoneTargetReply) Reset() {
	*x = DoneTargetReply{}
	mi := &file_step_v1_step_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DoneTargetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoneTargetReply) ProtoMessage() {}

func (x *DoneTargetReply) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoneTargetReply.ProtoReflect.Descriptor instead.
func (*DoneTargetReply) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{7}
}

func (x *DoneTargetReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTargetsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ParentId      uint64                 `protobuf:"varint,1,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTargetsRequest) Reset() {
	*x = GetTargetsRequest{}
	mi := &file_step_v1_step_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTargetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTargetsRequest) ProtoMessage() {}

func (x *GetTargetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTargetsRequest.ProtoReflect.Descriptor instead.
func (*GetTargetsRequest) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{8}
}

func (x *GetTargetsRequest) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

type Target struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	StartAt       int64                  `protobuf:"varint,6,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	ChallengeAt   int64                  `protobuf:"varint,7,opt,name=challenge_at,json=challengeAt,proto3" json:"challenge_at,omitempty"`
	DoneAt        int64                  `protobuf:"varint,8,opt,name=done_at,json=doneAt,proto3" json:"done_at,omitempty"`
	Layer         uint32                 `protobuf:"varint,9,opt,name=layer,proto3" json:"layer,omitempty"`
	Status        string                 `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	TargetParent  uint64                 `protobuf:"varint,11,opt,name=target_parent,json=targetParent,proto3" json:"target_parent,omitempty"`
	Children      []*Target              `protobuf:"bytes,12,rep,name=children,proto3" json:"children,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Target) Reset() {
	*x = Target{}
	mi := &file_step_v1_step_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{9}
}

func (x *Target) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Target) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Target) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Target) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Target) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Target) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *Target) GetChallengeAt() int64 {
	if x != nil {
		return x.ChallengeAt
	}
	return 0
}

func (x *Target) GetDoneAt() int64 {
	if x != nil {
		return x.DoneAt
	}
	return 0
}

func (x *Target) GetLayer() uint32 {
	if x != nil {
		return x.Layer
	}
	return 0
}

func (x *Target) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Target) GetTargetParent() uint64 {
	if x != nil {
		return x.TargetParent
	}
	return 0
}

func (x *Target) GetChildren() []*Target {
	if x != nil {
		return x.Children
	}
	return nil
}

type GetTargetsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Targets       []*Target              `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTargetsReply) Reset() {
	*x = GetTargetsReply{}
	mi := &file_step_v1_step_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTargetsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTargetsReply) ProtoMessage() {}

func (x *GetTargetsReply) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTargetsReply.ProtoReflect.Descriptor instead.
func (*GetTargetsReply) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{10}
}

func (x *GetTargetsReply) GetTargets() []*Target {
	if x != nil {
		return x.Targets
	}
	return nil
}

type GetTargetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	WithSteps     bool                   `protobuf:"varint,2,opt,name=with_steps,json=withSteps,proto3" json:"with_steps,omitempty"`
	Page          uint32                 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      uint32                 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTargetRequest) Reset() {
	*x = GetTargetRequest{}
	mi := &file_step_v1_step_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTargetRequest) ProtoMessage() {}

func (x *GetTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTargetRequest.ProtoReflect.Descriptor instead.
func (*GetTargetRequest) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{11}
}

func (x *GetTargetRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetTargetRequest) GetWithSteps() bool {
	if x != nil {
		return x.WithSteps
	}
	return false
}

func (x *GetTargetRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetTargetRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetTargetReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        *Target                `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Total         uint64                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Steps         []*Step                `protobuf:"bytes,3,rep,name=steps,proto3" json:"steps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTargetReply) Reset() {
	*x = GetTargetReply{}
	mi := &file_step_v1_step_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTargetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTargetReply) ProtoMessage() {}

func (x *GetTargetReply) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTargetReply.ProtoReflect.Descriptor instead.
func (*GetTargetReply) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{12}
}

func (x *GetTargetReply) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *GetTargetReply) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetTargetReply) GetSteps() []*Step {
	if x != nil {
		return x.Steps
	}
	return nil
}

type Step struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title          string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description    string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	IsChallenge    bool                   `protobuf:"varint,4,opt,name=is_challenge,json=isChallenge,proto3" json:"is_challenge,omitempty"`
	Type           string                 `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	ObjectName     string                 `protobuf:"bytes,6,opt,name=object_name,json=objectName,proto3" json:"object_name,omitempty"`
	PresignedUrl   string                 `protobuf:"bytes,7,opt,name=presigned_url,json=presignedUrl,proto3" json:"presigned_url,omitempty"`
	CreatedAt      int64                  `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	RefTargetId    uint64                 `protobuf:"varint,9,opt,name=ref_target_id,json=refTargetId,proto3" json:"ref_target_id,omitempty"`
	TeacherComment string                 `protobuf:"bytes,10,opt,name=teacher_comment,json=teacherComment,proto3" json:"teacher_comment,omitempty"`
	ParentComment  string                 `protobuf:"bytes,11,opt,name=parent_comment,json=parentComment,proto3" json:"parent_comment,omitempty"`
	FriendComment  string                 `protobuf:"bytes,12,opt,name=friend_comment,json=friendComment,proto3" json:"friend_comment,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Step) Reset() {
	*x = Step{}
	mi := &file_step_v1_step_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Step) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Step) ProtoMessage() {}

func (x *Step) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Step.ProtoReflect.Descriptor instead.
func (*Step) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{13}
}

func (x *Step) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Step) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Step) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Step) GetIsChallenge() bool {
	if x != nil {
		return x.IsChallenge
	}
	return false
}

func (x *Step) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Step) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

func (x *Step) GetPresignedUrl() string {
	if x != nil {
		return x.PresignedUrl
	}
	return ""
}

func (x *Step) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Step) GetRefTargetId() uint64 {
	if x != nil {
		return x.RefTargetId
	}
	return 0
}

func (x *Step) GetTeacherComment() string {
	if x != nil {
		return x.TeacherComment
	}
	return ""
}

func (x *Step) GetParentComment() string {
	if x != nil {
		return x.ParentComment
	}
	return ""
}

func (x *Step) GetFriendComment() string {
	if x != nil {
		return x.FriendComment
	}
	return ""
}

type GetTargetTreeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTargetTreeRequest) Reset() {
	*x = GetTargetTreeRequest{}
	mi := &file_step_v1_step_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTargetTreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTargetTreeRequest) ProtoMessage() {}

func (x *GetTargetTreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTargetTreeRequest.ProtoReflect.Descriptor instead.
func (*GetTargetTreeRequest) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{14}
}

func (x *GetTargetTreeRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTargetTreeReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RootTarget    *Target                `protobuf:"bytes,1,opt,name=root_target,json=rootTarget,proto3" json:"root_target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTargetTreeReply) Reset() {
	*x = GetTargetTreeReply{}
	mi := &file_step_v1_step_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTargetTreeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTargetTreeReply) ProtoMessage() {}

func (x *GetTargetTreeReply) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTargetTreeReply.ProtoReflect.Descriptor instead.
func (*GetTargetTreeReply) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{15}
}

func (x *GetTargetTreeReply) GetRootTarget() *Target {
	if x != nil {
		return x.RootTarget
	}
	return nil
}

type AddTargetDirStepRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTargetDirStepRequest) Reset() {
	*x = AddTargetDirStepRequest{}
	mi := &file_step_v1_step_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTargetDirStepRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTargetDirStepRequest) ProtoMessage() {}

func (x *AddTargetDirStepRequest) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTargetDirStepRequest.ProtoReflect.Descriptor instead.
func (*AddTargetDirStepRequest) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{16}
}

func (x *AddTargetDirStepRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddTargetDirStepRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type AddTargetDirStepReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ObjectName    string                 `protobuf:"bytes,2,opt,name=object_name,json=objectName,proto3" json:"object_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTargetDirStepReply) Reset() {
	*x = AddTargetDirStepReply{}
	mi := &file_step_v1_step_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTargetDirStepReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTargetDirStepReply) ProtoMessage() {}

func (x *AddTargetDirStepReply) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTargetDirStepReply.ProtoReflect.Descriptor instead.
func (*AddTargetDirStepReply) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{17}
}

func (x *AddTargetDirStepReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddTargetDirStepReply) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

type GetTargetDirStepChildrenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Page          uint32                 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      uint32                 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTargetDirStepChildrenRequest) Reset() {
	*x = GetTargetDirStepChildrenRequest{}
	mi := &file_step_v1_step_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTargetDirStepChildrenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTargetDirStepChildrenRequest) ProtoMessage() {}

func (x *GetTargetDirStepChildrenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTargetDirStepChildrenRequest.ProtoReflect.Descriptor instead.
func (*GetTargetDirStepChildrenRequest) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{18}
}

func (x *GetTargetDirStepChildrenRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetTargetDirStepChildrenRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetTargetDirStepChildrenRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetTargetDirStepChildrenReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         uint64                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Steps         []*Step                `protobuf:"bytes,2,rep,name=steps,proto3" json:"steps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTargetDirStepChildrenReply) Reset() {
	*x = GetTargetDirStepChildrenReply{}
	mi := &file_step_v1_step_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTargetDirStepChildrenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTargetDirStepChildrenReply) ProtoMessage() {}

func (x *GetTargetDirStepChildrenReply) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTargetDirStepChildrenReply.ProtoReflect.Descriptor instead.
func (*GetTargetDirStepChildrenReply) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{19}
}

func (x *GetTargetDirStepChildrenReply) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetTargetDirStepChildrenReply) GetSteps() []*Step {
	if x != nil {
		return x.Steps
	}
	return nil
}

type UpdateTargetStepRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	IsChallenge   *wrapperspb.BoolValue  `protobuf:"bytes,4,opt,name=is_challenge,json=isChallenge,proto3" json:"is_challenge,omitempty"`
	Type          string                 `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTargetStepRequest) Reset() {
	*x = UpdateTargetStepRequest{}
	mi := &file_step_v1_step_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTargetStepRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTargetStepRequest) ProtoMessage() {}

func (x *UpdateTargetStepRequest) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTargetStepRequest.ProtoReflect.Descriptor instead.
func (*UpdateTargetStepRequest) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateTargetStepRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTargetStepRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateTargetStepRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateTargetStepRequest) GetIsChallenge() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsChallenge
	}
	return nil
}

func (x *UpdateTargetStepRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type UpdateTargetStepReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTargetStepReply) Reset() {
	*x = UpdateTargetStepReply{}
	mi := &file_step_v1_step_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTargetStepReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTargetStepReply) ProtoMessage() {}

func (x *UpdateTargetStepReply) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTargetStepReply.ProtoReflect.Descriptor instead.
func (*UpdateTargetStepReply) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateTargetStepReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteTargetStepRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTargetStepRequest) Reset() {
	*x = DeleteTargetStepRequest{}
	mi := &file_step_v1_step_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTargetStepRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTargetStepRequest) ProtoMessage() {}

func (x *DeleteTargetStepRequest) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTargetStepRequest.ProtoReflect.Descriptor instead.
func (*DeleteTargetStepRequest) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteTargetStepRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteTargetStepReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTargetStepReply) Reset() {
	*x = DeleteTargetStepReply{}
	mi := &file_step_v1_step_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTargetStepReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTargetStepReply) ProtoMessage() {}

func (x *DeleteTargetStepReply) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTargetStepReply.ProtoReflect.Descriptor instead.
func (*DeleteTargetStepReply) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteTargetStepReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type EncryptRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data          string                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncryptRequest) Reset() {
	*x = EncryptRequest{}
	mi := &file_step_v1_step_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncryptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptRequest) ProtoMessage() {}

func (x *EncryptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptRequest.ProtoReflect.Descriptor instead.
func (*EncryptRequest) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{24}
}

func (x *EncryptRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EncryptRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type EncryptReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          string                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncryptReply) Reset() {
	*x = EncryptReply{}
	mi := &file_step_v1_step_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncryptReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptReply) ProtoMessage() {}

func (x *EncryptReply) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptReply.ProtoReflect.Descriptor instead.
func (*EncryptReply) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{25}
}

func (x *EncryptReply) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GetPortraitBasicRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dimension     string                 `protobuf:"bytes,1,opt,name=dimension,proto3" json:"dimension,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPortraitBasicRequest) Reset() {
	*x = GetPortraitBasicRequest{}
	mi := &file_step_v1_step_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPortraitBasicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPortraitBasicRequest) ProtoMessage() {}

func (x *GetPortraitBasicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPortraitBasicRequest.ProtoReflect.Descriptor instead.
func (*GetPortraitBasicRequest) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{26}
}

func (x *GetPortraitBasicRequest) GetDimension() string {
	if x != nil {
		return x.Dimension
	}
	return ""
}

type GetPortraitBasicReply struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// basic, self_discipline, target_and_execution, learning_and_growth
	Dimension string `protobuf:"bytes,1,opt,name=dimension,proto3" json:"dimension,omitempty"`
	// json string
	Value         string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPortraitBasicReply) Reset() {
	*x = GetPortraitBasicReply{}
	mi := &file_step_v1_step_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPortraitBasicReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPortraitBasicReply) ProtoMessage() {}

func (x *GetPortraitBasicReply) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPortraitBasicReply.ProtoReflect.Descriptor instead.
func (*GetPortraitBasicReply) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{27}
}

func (x *GetPortraitBasicReply) GetDimension() string {
	if x != nil {
		return x.Dimension
	}
	return ""
}

func (x *GetPortraitBasicReply) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetPortraitStepRateRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	TopTargetId uint64                 `protobuf:"varint,1,opt,name=top_target_id,json=topTargetId,proto3" json:"top_target_id,omitempty"`
	// day, week, month
	StatUnit string `protobuf:"bytes,2,opt,name=stat_unit,json=statUnit,proto3" json:"stat_unit,omitempty"`
	// format: 2025-01-01
	StartDate string `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	// format: 2025-01-01
	EndDate       string `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPortraitStepRateRequest) Reset() {
	*x = GetPortraitStepRateRequest{}
	mi := &file_step_v1_step_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPortraitStepRateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPortraitStepRateRequest) ProtoMessage() {}

func (x *GetPortraitStepRateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPortraitStepRateRequest.ProtoReflect.Descriptor instead.
func (*GetPortraitStepRateRequest) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{28}
}

func (x *GetPortraitStepRateRequest) GetTopTargetId() uint64 {
	if x != nil {
		return x.TopTargetId
	}
	return 0
}

func (x *GetPortraitStepRateRequest) GetStatUnit() string {
	if x != nil {
		return x.StatUnit
	}
	return ""
}

func (x *GetPortraitStepRateRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetPortraitStepRateRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

type GetPortraitStepRateReply struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	TopTargetId uint64                 `protobuf:"varint,1,opt,name=top_target_id,json=topTargetId,proto3" json:"top_target_id,omitempty"`
	StatUnit    string                 `protobuf:"bytes,2,opt,name=stat_unit,json=statUnit,proto3" json:"stat_unit,omitempty"`
	// json string
	Value         string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPortraitStepRateReply) Reset() {
	*x = GetPortraitStepRateReply{}
	mi := &file_step_v1_step_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPortraitStepRateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPortraitStepRateReply) ProtoMessage() {}

func (x *GetPortraitStepRateReply) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPortraitStepRateReply.ProtoReflect.Descriptor instead.
func (*GetPortraitStepRateReply) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{29}
}

func (x *GetPortraitStepRateReply) GetTopTargetId() uint64 {
	if x != nil {
		return x.TopTargetId
	}
	return 0
}

func (x *GetPortraitStepRateReply) GetStatUnit() string {
	if x != nil {
		return x.StatUnit
	}
	return ""
}

func (x *GetPortraitStepRateReply) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetFeedbackAwardsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Page            int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize        int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Status          string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	SettedStartDate string                 `protobuf:"bytes,4,opt,name=setted_start_date,json=settedStartDate,proto3" json:"setted_start_date,omitempty"`
	SettedEndDate   string                 `protobuf:"bytes,5,opt,name=setted_end_date,json=settedEndDate,proto3" json:"setted_end_date,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetFeedbackAwardsRequest) Reset() {
	*x = GetFeedbackAwardsRequest{}
	mi := &file_step_v1_step_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeedbackAwardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedbackAwardsRequest) ProtoMessage() {}

func (x *GetFeedbackAwardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedbackAwardsRequest.ProtoReflect.Descriptor instead.
func (*GetFeedbackAwardsRequest) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{30}
}

func (x *GetFeedbackAwardsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetFeedbackAwardsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetFeedbackAwardsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetFeedbackAwardsRequest) GetSettedStartDate() string {
	if x != nil {
		return x.SettedStartDate
	}
	return ""
}

func (x *GetFeedbackAwardsRequest) GetSettedEndDate() string {
	if x != nil {
		return x.SettedEndDate
	}
	return ""
}

type GetFeedbackAwardsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         uint64                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Awards        []*FeedbackAward       `protobuf:"bytes,2,rep,name=awards,proto3" json:"awards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFeedbackAwardsReply) Reset() {
	*x = GetFeedbackAwardsReply{}
	mi := &file_step_v1_step_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeedbackAwardsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedbackAwardsReply) ProtoMessage() {}

func (x *GetFeedbackAwardsReply) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedbackAwardsReply.ProtoReflect.Descriptor instead.
func (*GetFeedbackAwardsReply) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{31}
}

func (x *GetFeedbackAwardsReply) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetFeedbackAwardsReply) GetAwards() []*FeedbackAward {
	if x != nil {
		return x.Awards
	}
	return nil
}

type GetFeedbackAwardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFeedbackAwardRequest) Reset() {
	*x = GetFeedbackAwardRequest{}
	mi := &file_step_v1_step_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeedbackAwardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedbackAwardRequest) ProtoMessage() {}

func (x *GetFeedbackAwardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedbackAwardRequest.ProtoReflect.Descriptor instead.
func (*GetFeedbackAwardRequest) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{32}
}

func (x *GetFeedbackAwardRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetFeedbackAwardReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Award         *FeedbackAward         `protobuf:"bytes,1,opt,name=award,proto3" json:"award,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFeedbackAwardReply) Reset() {
	*x = GetFeedbackAwardReply{}
	mi := &file_step_v1_step_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeedbackAwardReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedbackAwardReply) ProtoMessage() {}

func (x *GetFeedbackAwardReply) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedbackAwardReply.ProtoReflect.Descriptor instead.
func (*GetFeedbackAwardReply) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{33}
}

func (x *GetFeedbackAwardReply) GetAward() *FeedbackAward {
	if x != nil {
		return x.Award
	}
	return nil
}

type FeedbackAward struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	SettedFiles   []string               `protobuf:"bytes,4,rep,name=setted_files,json=settedFiles,proto3" json:"setted_files,omitempty"`
	RealizedFiles []string               `protobuf:"bytes,5,rep,name=realized_files,json=realizedFiles,proto3" json:"realized_files,omitempty"`
	TargetType    string                 `protobuf:"bytes,6,opt,name=target_type,json=targetType,proto3" json:"target_type,omitempty"`
	Scope         string                 `protobuf:"bytes,7,opt,name=scope,proto3" json:"scope,omitempty"`
	Dimension     string                 `protobuf:"bytes,8,opt,name=dimension,proto3" json:"dimension,omitempty"`
	Threshold     int32                  `protobuf:"varint,9,opt,name=threshold,proto3" json:"threshold,omitempty"`
	SettedAt      int64                  `protobuf:"varint,10,opt,name=setted_at,json=settedAt,proto3" json:"setted_at,omitempty"`
	AchievedAt    int64                  `protobuf:"varint,11,opt,name=achieved_at,json=achievedAt,proto3" json:"achieved_at,omitempty"`
	RealizedAt    int64                  `protobuf:"varint,12,opt,name=realized_at,json=realizedAt,proto3" json:"realized_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FeedbackAward) Reset() {
	*x = FeedbackAward{}
	mi := &file_step_v1_step_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedbackAward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedbackAward) ProtoMessage() {}

func (x *FeedbackAward) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedbackAward.ProtoReflect.Descriptor instead.
func (*FeedbackAward) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{34}
}

func (x *FeedbackAward) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FeedbackAward) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FeedbackAward) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FeedbackAward) GetSettedFiles() []string {
	if x != nil {
		return x.SettedFiles
	}
	return nil
}

func (x *FeedbackAward) GetRealizedFiles() []string {
	if x != nil {
		return x.RealizedFiles
	}
	return nil
}

func (x *FeedbackAward) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

func (x *FeedbackAward) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *FeedbackAward) GetDimension() string {
	if x != nil {
		return x.Dimension
	}
	return ""
}

func (x *FeedbackAward) GetThreshold() int32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *FeedbackAward) GetSettedAt() int64 {
	if x != nil {
		return x.SettedAt
	}
	return 0
}

func (x *FeedbackAward) GetAchievedAt() int64 {
	if x != nil {
		return x.AchievedAt
	}
	return 0
}

func (x *FeedbackAward) GetRealizedAt() int64 {
	if x != nil {
		return x.RealizedAt
	}
	return 0
}

type DeleteFeedbackAwardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFeedbackAwardRequest) Reset() {
	*x = DeleteFeedbackAwardRequest{}
	mi := &file_step_v1_step_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFeedbackAwardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeedbackAwardRequest) ProtoMessage() {}

func (x *DeleteFeedbackAwardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeedbackAwardRequest.ProtoReflect.Descriptor instead.
func (*DeleteFeedbackAwardRequest) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{35}
}

func (x *DeleteFeedbackAwardRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteFeedbackAwardReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFeedbackAwardReply) Reset() {
	*x = DeleteFeedbackAwardReply{}
	mi := &file_step_v1_step_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFeedbackAwardReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeedbackAwardReply) ProtoMessage() {}

func (x *DeleteFeedbackAwardReply) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeedbackAwardReply.ProtoReflect.Descriptor instead.
func (*DeleteFeedbackAwardReply) Descriptor() ([]byte, []int) {
	return file_step_v1_step_proto_rawDescGZIP(), []int{36}
}

func (x *DeleteFeedbackAwardReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_step_v1_step_proto protoreflect.FileDescriptor

var file_step_v1_step_proto_rawDesc = string([]byte{
	0x0a, 0x12, 0x73, 0x74, 0x65, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7e, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x22, 0x5d, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x23, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x23, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x6f, 0x6e, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x21, 0x0a, 0x0f, 0x44, 0x6f, 0x6e, 0x65, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xda, 0x02, 0x0a,
	0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x41, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x64, 0x6f, 0x6e, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x64, 0x6f, 0x6e, 0x65, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x08,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52,
	0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x3c, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x29, 0x0a, 0x07,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x07,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x22, 0x72, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x77,
	0x69, 0x74, 0x68, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x77, 0x69, 0x74, 0x68, 0x53, 0x74, 0x65, 0x70, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x74, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x05,
	0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x74,
	0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70,
	0x73, 0x22, 0x85, 0x03, 0x0a, 0x04, 0x53, 0x74, 0x65, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72,
	0x65, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x22,
	0x0a, 0x0d, 0x72, 0x65, 0x66, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x46, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x72,
	0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x0b, 0x72, 0x6f, 0x6f, 0x74, 0x5f,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73,
	0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x0a, 0x72,
	0x6f, 0x6f, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x3f, 0x0a, 0x17, 0x41, 0x64, 0x64,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x69, 0x72, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x48, 0x0a, 0x15, 0x41, 0x64,
	0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x69, 0x72, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x44, 0x69, 0x72, 0x53, 0x74, 0x65, 0x70, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x5a, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x69, 0x72, 0x53, 0x74, 0x65, 0x70, 0x43, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x23, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x05, 0x73,
	0x74, 0x65, 0x70, 0x73, 0x22, 0xb4, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x27, 0x0a, 0x15, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x65, 0x70, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53,
	0x74, 0x65, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x0e, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x22,
	0x0a, 0x0c, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x37, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69,
	0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4b, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x50, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x53, 0x74, 0x65, 0x70, 0x52, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x6f, 0x70, 0x5f, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x74, 0x6f, 0x70, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x74, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x22, 0x71, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69,
	0x74, 0x53, 0x74, 0x65, 0x70, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x22,
	0x0a, 0x0d, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x73,
	0x65, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x74, 0x74, 0x65, 0x64, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x74, 0x74, 0x65,
	0x64, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x65, 0x74, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22,
	0x5e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x2e, 0x0a, 0x06, 0x61, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x06, 0x61, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22,
	0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x61, 0x77, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x05, 0x61, 0x77, 0x61, 0x72,
	0x64, 0x22, 0xf5, 0x02, 0x0a, 0x0d, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x77,
	0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x65, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x74, 0x74, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65,
	0x74, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73,
	0x65, 0x74, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72,
	0x65, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x41, 0x74, 0x22, 0x2c, 0x0a, 0x1a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x32, 0xd9, 0x09, 0x0a, 0x0b, 0x53, 0x74, 0x65, 0x70, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x1c, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x12, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x3a, 0x01, 0x2a, 0x22, 0x07, 0x2f, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x12, 0x61, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x12, 0x1c, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x17, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x11, 0x3a, 0x01, 0x2a, 0x1a, 0x0c, 0x2f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x54, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x73, 0x12, 0x1a, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a,
	0x12, 0x08, 0x2f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x5e, 0x0a, 0x0c, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1c, 0x2e, 0x73, 0x74, 0x65,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x2a, 0x0c, 0x2f, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x60, 0x0a, 0x0a, 0x44, 0x6f,
	0x6e, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1a, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x6f, 0x6e, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x6f, 0x6e, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x55, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x19, 0x2e, 0x73, 0x74, 0x65, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x14, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x66, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x54, 0x72, 0x65, 0x65, 0x12, 0x1d, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x72, 0x65, 0x65, 0x12, 0x71, 0x0a, 0x10, 0x41,
	0x64, 0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x69, 0x72, 0x53, 0x74, 0x65, 0x70, 0x12,
	0x20, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x44, 0x69, 0x72, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x69, 0x72, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x64, 0x69, 0x72, 0x12, 0x8d,
	0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x69, 0x72, 0x53,
	0x74, 0x65, 0x70, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x28, 0x2e, 0x73, 0x74,
	0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44,
	0x69, 0x72, 0x53, 0x74, 0x65, 0x70, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x69, 0x72, 0x53, 0x74, 0x65, 0x70,
	0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x73, 0x74, 0x65, 0x70, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x2f, 0x64, 0x69, 0x72, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x6b,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74,
	0x65, 0x70, 0x12, 0x20, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x65, 0x70, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x1a,
	0x0a, 0x2f, 0x73, 0x74, 0x65, 0x70, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x68, 0x0a, 0x10, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x65, 0x70, 0x12,
	0x20, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x2a, 0x0a, 0x2f, 0x73, 0x74, 0x65, 0x70,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x58, 0x0a, 0x07, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x12, 0x17, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x74, 0x65, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x73, 0x74,
	0x65, 0x70, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x32,
	0xfc, 0x01, 0x0a, 0x0f, 0x50, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x6d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x72, 0x61,
	0x69, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x12, 0x20, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x74, 0x65, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x11, 0x12, 0x0f, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x2f, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x12, 0x7a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69,
	0x74, 0x53, 0x74, 0x65, 0x70, 0x52, 0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x73, 0x74, 0x65, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x53,
	0x74, 0x65, 0x70, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74,
	0x72, 0x61, 0x69, 0x74, 0x53, 0x74, 0x65, 0x70, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x70, 0x6f, 0x72, 0x74,
	0x72, 0x61, 0x69, 0x74, 0x2f, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x32, 0xf5,
	0x02, 0x0a, 0x0f, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x71, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x41, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x21, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x74, 0x65,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x41, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2f, 0x61,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x72, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x20, 0x2e, 0x73, 0x74, 0x65, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x41,
	0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x74,
	0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2f, 0x61,
	0x77, 0x61, 0x72, 0x64, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7b, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x23, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16,
	0x2a, 0x14, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2f, 0x61, 0x77, 0x61, 0x72,
	0x64, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x93, 0x01, 0xba, 0x47, 0x54, 0x12, 0x17, 0x0a, 0x10,
	0x53, 0x74, 0x65, 0x70, 0x20, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x41, 0x50, 0x49,
	0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a, 0x27, 0x3a, 0x25, 0x0a, 0x23, 0x0a, 0x0a, 0x62, 0x65, 0x61,
	0x72, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x15, 0x0a, 0x13, 0x0a, 0x04, 0x68, 0x74, 0x74,
	0x70, 0x2a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x32, 0x03, 0x4a, 0x57, 0x54, 0x32, 0x10,
	0x0a, 0x0e, 0x0a, 0x0a, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x00,
	0x0a, 0x16, 0x64, 0x65, 0x76, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x53, 0x74, 0x65, 0x70, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x13, 0x73, 0x74, 0x65, 0x70, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x73, 0x74, 0x65, 0x70, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_step_v1_step_proto_rawDescOnce sync.Once
	file_step_v1_step_proto_rawDescData []byte
)

func file_step_v1_step_proto_rawDescGZIP() []byte {
	file_step_v1_step_proto_rawDescOnce.Do(func() {
		file_step_v1_step_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_step_v1_step_proto_rawDesc), len(file_step_v1_step_proto_rawDesc)))
	})
	return file_step_v1_step_proto_rawDescData
}

var file_step_v1_step_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_step_v1_step_proto_goTypes = []any{
	(*CreateTargetRequest)(nil),             // 0: step.v1.CreateTargetRequest
	(*CreateTargetReply)(nil),               // 1: step.v1.CreateTargetReply
	(*UpdateTargetRequest)(nil),             // 2: step.v1.UpdateTargetRequest
	(*UpdateTargetReply)(nil),               // 3: step.v1.UpdateTargetReply
	(*DeleteTargetRequest)(nil),             // 4: step.v1.DeleteTargetRequest
	(*DeleteTargetReply)(nil),               // 5: step.v1.DeleteTargetReply
	(*DoneTargetRequest)(nil),               // 6: step.v1.DoneTargetRequest
	(*DoneTargetReply)(nil),                 // 7: step.v1.DoneTargetReply
	(*GetTargetsRequest)(nil),               // 8: step.v1.GetTargetsRequest
	(*Target)(nil),                          // 9: step.v1.Target
	(*GetTargetsReply)(nil),                 // 10: step.v1.GetTargetsReply
	(*GetTargetRequest)(nil),                // 11: step.v1.GetTargetRequest
	(*GetTargetReply)(nil),                  // 12: step.v1.GetTargetReply
	(*Step)(nil),                            // 13: step.v1.Step
	(*GetTargetTreeRequest)(nil),            // 14: step.v1.GetTargetTreeRequest
	(*GetTargetTreeReply)(nil),              // 15: step.v1.GetTargetTreeReply
	(*AddTargetDirStepRequest)(nil),         // 16: step.v1.AddTargetDirStepRequest
	(*AddTargetDirStepReply)(nil),           // 17: step.v1.AddTargetDirStepReply
	(*GetTargetDirStepChildrenRequest)(nil), // 18: step.v1.GetTargetDirStepChildrenRequest
	(*GetTargetDirStepChildrenReply)(nil),   // 19: step.v1.GetTargetDirStepChildrenReply
	(*UpdateTargetStepRequest)(nil),         // 20: step.v1.UpdateTargetStepRequest
	(*UpdateTargetStepReply)(nil),           // 21: step.v1.UpdateTargetStepReply
	(*DeleteTargetStepRequest)(nil),         // 22: step.v1.DeleteTargetStepRequest
	(*DeleteTargetStepReply)(nil),           // 23: step.v1.DeleteTargetStepReply
	(*EncryptRequest)(nil),                  // 24: step.v1.EncryptRequest
	(*EncryptReply)(nil),                    // 25: step.v1.EncryptReply
	(*GetPortraitBasicRequest)(nil),         // 26: step.v1.GetPortraitBasicRequest
	(*GetPortraitBasicReply)(nil),           // 27: step.v1.GetPortraitBasicReply
	(*GetPortraitStepRateRequest)(nil),      // 28: step.v1.GetPortraitStepRateRequest
	(*GetPortraitStepRateReply)(nil),        // 29: step.v1.GetPortraitStepRateReply
	(*GetFeedbackAwardsRequest)(nil),        // 30: step.v1.GetFeedbackAwardsRequest
	(*GetFeedbackAwardsReply)(nil),          // 31: step.v1.GetFeedbackAwardsReply
	(*GetFeedbackAwardRequest)(nil),         // 32: step.v1.GetFeedbackAwardRequest
	(*GetFeedbackAwardReply)(nil),           // 33: step.v1.GetFeedbackAwardReply
	(*FeedbackAward)(nil),                   // 34: step.v1.FeedbackAward
	(*DeleteFeedbackAwardRequest)(nil),      // 35: step.v1.DeleteFeedbackAwardRequest
	(*DeleteFeedbackAwardReply)(nil),        // 36: step.v1.DeleteFeedbackAwardReply
	(*wrapperspb.BoolValue)(nil),            // 37: google.protobuf.BoolValue
}
var file_step_v1_step_proto_depIdxs = []int32{
	9,  // 0: step.v1.Target.children:type_name -> step.v1.Target
	9,  // 1: step.v1.GetTargetsReply.targets:type_name -> step.v1.Target
	9,  // 2: step.v1.GetTargetReply.target:type_name -> step.v1.Target
	13, // 3: step.v1.GetTargetReply.steps:type_name -> step.v1.Step
	9,  // 4: step.v1.GetTargetTreeReply.root_target:type_name -> step.v1.Target
	13, // 5: step.v1.GetTargetDirStepChildrenReply.steps:type_name -> step.v1.Step
	37, // 6: step.v1.UpdateTargetStepRequest.is_challenge:type_name -> google.protobuf.BoolValue
	34, // 7: step.v1.GetFeedbackAwardsReply.awards:type_name -> step.v1.FeedbackAward
	34, // 8: step.v1.GetFeedbackAwardReply.award:type_name -> step.v1.FeedbackAward
	0,  // 9: step.v1.StepService.CreateTarget:input_type -> step.v1.CreateTargetRequest
	2,  // 10: step.v1.StepService.UpdateTarget:input_type -> step.v1.UpdateTargetRequest
	8,  // 11: step.v1.StepService.GetTargets:input_type -> step.v1.GetTargetsRequest
	4,  // 12: step.v1.StepService.DeleteTarget:input_type -> step.v1.DeleteTargetRequest
	6,  // 13: step.v1.StepService.DoneTarget:input_type -> step.v1.DoneTargetRequest
	11, // 14: step.v1.StepService.GetTarget:input_type -> step.v1.GetTargetRequest
	14, // 15: step.v1.StepService.GetTargetTree:input_type -> step.v1.GetTargetTreeRequest
	16, // 16: step.v1.StepService.AddTargetDirStep:input_type -> step.v1.AddTargetDirStepRequest
	18, // 17: step.v1.StepService.GetTargetDirStepChildren:input_type -> step.v1.GetTargetDirStepChildrenRequest
	20, // 18: step.v1.StepService.UpdateTargetStep:input_type -> step.v1.UpdateTargetStepRequest
	22, // 19: step.v1.StepService.DeleteTargetStep:input_type -> step.v1.DeleteTargetStepRequest
	24, // 20: step.v1.StepService.Encrypt:input_type -> step.v1.EncryptRequest
	26, // 21: step.v1.PortraitService.GetPortraitBasic:input_type -> step.v1.GetPortraitBasicRequest
	28, // 22: step.v1.PortraitService.GetPortraitStepRate:input_type -> step.v1.GetPortraitStepRateRequest
	30, // 23: step.v1.FeedbackService.GetFeedbackAwards:input_type -> step.v1.GetFeedbackAwardsRequest
	32, // 24: step.v1.FeedbackService.GetFeedbackAward:input_type -> step.v1.GetFeedbackAwardRequest
	35, // 25: step.v1.FeedbackService.DeleteFeedbackAward:input_type -> step.v1.DeleteFeedbackAwardRequest
	1,  // 26: step.v1.StepService.CreateTarget:output_type -> step.v1.CreateTargetReply
	3,  // 27: step.v1.StepService.UpdateTarget:output_type -> step.v1.UpdateTargetReply
	10, // 28: step.v1.StepService.GetTargets:output_type -> step.v1.GetTargetsReply
	5,  // 29: step.v1.StepService.DeleteTarget:output_type -> step.v1.DeleteTargetReply
	7,  // 30: step.v1.StepService.DoneTarget:output_type -> step.v1.DoneTargetReply
	12, // 31: step.v1.StepService.GetTarget:output_type -> step.v1.GetTargetReply
	15, // 32: step.v1.StepService.GetTargetTree:output_type -> step.v1.GetTargetTreeReply
	17, // 33: step.v1.StepService.AddTargetDirStep:output_type -> step.v1.AddTargetDirStepReply
	19, // 34: step.v1.StepService.GetTargetDirStepChildren:output_type -> step.v1.GetTargetDirStepChildrenReply
	21, // 35: step.v1.StepService.UpdateTargetStep:output_type -> step.v1.UpdateTargetStepReply
	23, // 36: step.v1.StepService.DeleteTargetStep:output_type -> step.v1.DeleteTargetStepReply
	25, // 37: step.v1.StepService.Encrypt:output_type -> step.v1.EncryptReply
	27, // 38: step.v1.PortraitService.GetPortraitBasic:output_type -> step.v1.GetPortraitBasicReply
	29, // 39: step.v1.PortraitService.GetPortraitStepRate:output_type -> step.v1.GetPortraitStepRateReply
	31, // 40: step.v1.FeedbackService.GetFeedbackAwards:output_type -> step.v1.GetFeedbackAwardsReply
	33, // 41: step.v1.FeedbackService.GetFeedbackAward:output_type -> step.v1.GetFeedbackAwardReply
	36, // 42: step.v1.FeedbackService.DeleteFeedbackAward:output_type -> step.v1.DeleteFeedbackAwardReply
	26, // [26:43] is the sub-list for method output_type
	9,  // [9:26] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_step_v1_step_proto_init() }
func file_step_v1_step_proto_init() {
	if File_step_v1_step_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_step_v1_step_proto_rawDesc), len(file_step_v1_step_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_step_v1_step_proto_goTypes,
		DependencyIndexes: file_step_v1_step_proto_depIdxs,
		MessageInfos:      file_step_v1_step_proto_msgTypes,
	}.Build()
	File_step_v1_step_proto = out.File
	file_step_v1_step_proto_goTypes = nil
	file_step_v1_step_proto_depIdxs = nil
}
