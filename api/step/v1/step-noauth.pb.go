// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.0
// source: step/v1/step-noauth.proto

package v1

import (
	_ "github.com/google/gnostic/openapiv3"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	_ "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SetCommentForStepRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// teacher, parent, friend
	Type          string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Comment       string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetCommentForStepRequest) Reset() {
	*x = SetCommentForStepRequest{}
	mi := &file_step_v1_step_noauth_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetCommentForStepRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCommentForStepRequest) ProtoMessage() {}

func (x *SetCommentForStepRequest) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_noauth_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCommentForStepRequest.ProtoReflect.Descriptor instead.
func (*SetCommentForStepRequest) Descriptor() ([]byte, []int) {
	return file_step_v1_step_noauth_proto_rawDescGZIP(), []int{0}
}

func (x *SetCommentForStepRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetCommentForStepRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SetCommentForStepRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type SetCommentForStepReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetCommentForStepReply) Reset() {
	*x = SetCommentForStepReply{}
	mi := &file_step_v1_step_noauth_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetCommentForStepReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCommentForStepReply) ProtoMessage() {}

func (x *SetCommentForStepReply) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_noauth_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCommentForStepReply.ProtoReflect.Descriptor instead.
func (*SetCommentForStepReply) Descriptor() ([]byte, []int) {
	return file_step_v1_step_noauth_proto_rawDescGZIP(), []int{1}
}

func (x *SetCommentForStepReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetNoauthStepRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ShareTo       string                 `protobuf:"bytes,2,opt,name=share_to,json=shareTo,proto3" json:"share_to,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNoauthStepRequest) Reset() {
	*x = GetNoauthStepRequest{}
	mi := &file_step_v1_step_noauth_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNoauthStepRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoauthStepRequest) ProtoMessage() {}

func (x *GetNoauthStepRequest) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_noauth_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoauthStepRequest.ProtoReflect.Descriptor instead.
func (*GetNoauthStepRequest) Descriptor() ([]byte, []int) {
	return file_step_v1_step_noauth_proto_rawDescGZIP(), []int{2}
}

func (x *GetNoauthStepRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetNoauthStepRequest) GetShareTo() string {
	if x != nil {
		return x.ShareTo
	}
	return ""
}

type GetNoauthStepReply struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TargetTitle       string                 `protobuf:"bytes,1,opt,name=target_title,json=targetTitle,proto3" json:"target_title,omitempty"`
	TargetDescription string                 `protobuf:"bytes,2,opt,name=target_description,json=targetDescription,proto3" json:"target_description,omitempty"`
	Step              *Step                  `protobuf:"bytes,3,opt,name=step,proto3" json:"step,omitempty"`
	Children          []*Step                `protobuf:"bytes,4,rep,name=children,proto3" json:"children,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetNoauthStepReply) Reset() {
	*x = GetNoauthStepReply{}
	mi := &file_step_v1_step_noauth_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNoauthStepReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoauthStepReply) ProtoMessage() {}

func (x *GetNoauthStepReply) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_noauth_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoauthStepReply.ProtoReflect.Descriptor instead.
func (*GetNoauthStepReply) Descriptor() ([]byte, []int) {
	return file_step_v1_step_noauth_proto_rawDescGZIP(), []int{3}
}

func (x *GetNoauthStepReply) GetTargetTitle() string {
	if x != nil {
		return x.TargetTitle
	}
	return ""
}

func (x *GetNoauthStepReply) GetTargetDescription() string {
	if x != nil {
		return x.TargetDescription
	}
	return ""
}

func (x *GetNoauthStepReply) GetStep() *Step {
	if x != nil {
		return x.Step
	}
	return nil
}

func (x *GetNoauthStepReply) GetChildren() []*Step {
	if x != nil {
		return x.Children
	}
	return nil
}

type DecryptRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data          string                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecryptRequest) Reset() {
	*x = DecryptRequest{}
	mi := &file_step_v1_step_noauth_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecryptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptRequest) ProtoMessage() {}

func (x *DecryptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_noauth_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptRequest.ProtoReflect.Descriptor instead.
func (*DecryptRequest) Descriptor() ([]byte, []int) {
	return file_step_v1_step_noauth_proto_rawDescGZIP(), []int{4}
}

func (x *DecryptRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DecryptRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type DecryptReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          string                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecryptReply) Reset() {
	*x = DecryptReply{}
	mi := &file_step_v1_step_noauth_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecryptReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptReply) ProtoMessage() {}

func (x *DecryptReply) ProtoReflect() protoreflect.Message {
	mi := &file_step_v1_step_noauth_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptReply.ProtoReflect.Descriptor instead.
func (*DecryptReply) Descriptor() ([]byte, []int) {
	return file_step_v1_step_noauth_proto_rawDescGZIP(), []int{5}
}

func (x *DecryptReply) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_step_v1_step_noauth_proto protoreflect.FileDescriptor

var file_step_v1_step_noauth_proto_rawDesc = string([]byte{
	0x0a, 0x19, 0x73, 0x74, 0x65, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x65, 0x70, 0x2d, 0x6e,
	0x6f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x74, 0x65,
	0x70, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x73, 0x74, 0x65,
	0x70, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x58, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72,
	0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x28, 0x0a, 0x16, 0x53, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x61, 0x75, 0x74, 0x68,
	0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x54, 0x6f, 0x22, 0xb4, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x61, 0x75, 0x74, 0x68, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x2d, 0x0a, 0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x21, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x04, 0x73, 0x74,
	0x65, 0x70, 0x12, 0x29, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x65, 0x70, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x34, 0x0a,
	0x0e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x22, 0x0a, 0x0c, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x83, 0x03, 0x0a, 0x11, 0x53, 0x74, 0x65, 0x70,
	0x4e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x73, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x53, 0x74, 0x65, 0x70, 0x12, 0x1d,
	0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x61, 0x75,
	0x74, 0x68, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x61, 0x75, 0x74,
	0x68, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x20, 0x12, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x73, 0x74, 0x65, 0x70, 0x2d, 0x67,
	0x6f, 0x2d, 0x6e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x73, 0x74, 0x65, 0x70, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x8a, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x65, 0x70, 0x12, 0x21, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72,
	0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x74,
	0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x46, 0x6f, 0x72, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x31, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x73,
	0x74, 0x65, 0x70, 0x2d, 0x67, 0x6f, 0x2d, 0x6e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x73, 0x74,
	0x65, 0x70, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x6c, 0x0a, 0x07, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x17, 0x2e, 0x73, 0x74, 0x65,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x73, 0x74, 0x65,
	0x70, 0x2d, 0x67, 0x6f, 0x2d, 0x6e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x73, 0x74, 0x65, 0x70,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x64, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x42, 0x3c, 0x0a,
	0x16, 0x64, 0x65, 0x76, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x65, 0x70, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x53, 0x74, 0x65, 0x70, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x13, 0x73, 0x74, 0x65, 0x70, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x74, 0x65, 0x70, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	file_step_v1_step_noauth_proto_rawDescOnce sync.Once
	file_step_v1_step_noauth_proto_rawDescData []byte
)

func file_step_v1_step_noauth_proto_rawDescGZIP() []byte {
	file_step_v1_step_noauth_proto_rawDescOnce.Do(func() {
		file_step_v1_step_noauth_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_step_v1_step_noauth_proto_rawDesc), len(file_step_v1_step_noauth_proto_rawDesc)))
	})
	return file_step_v1_step_noauth_proto_rawDescData
}

var file_step_v1_step_noauth_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_step_v1_step_noauth_proto_goTypes = []any{
	(*SetCommentForStepRequest)(nil), // 0: step.v1.SetCommentForStepRequest
	(*SetCommentForStepReply)(nil),   // 1: step.v1.SetCommentForStepReply
	(*GetNoauthStepRequest)(nil),     // 2: step.v1.GetNoauthStepRequest
	(*GetNoauthStepReply)(nil),       // 3: step.v1.GetNoauthStepReply
	(*DecryptRequest)(nil),           // 4: step.v1.DecryptRequest
	(*DecryptReply)(nil),             // 5: step.v1.DecryptReply
	(*Step)(nil),                     // 6: step.v1.Step
}
var file_step_v1_step_noauth_proto_depIdxs = []int32{
	6, // 0: step.v1.GetNoauthStepReply.step:type_name -> step.v1.Step
	6, // 1: step.v1.GetNoauthStepReply.children:type_name -> step.v1.Step
	2, // 2: step.v1.StepNoauthService.GetNoauthStep:input_type -> step.v1.GetNoauthStepRequest
	0, // 3: step.v1.StepNoauthService.SetCommentForStep:input_type -> step.v1.SetCommentForStepRequest
	4, // 4: step.v1.StepNoauthService.Decrypt:input_type -> step.v1.DecryptRequest
	3, // 5: step.v1.StepNoauthService.GetNoauthStep:output_type -> step.v1.GetNoauthStepReply
	1, // 6: step.v1.StepNoauthService.SetCommentForStep:output_type -> step.v1.SetCommentForStepReply
	5, // 7: step.v1.StepNoauthService.Decrypt:output_type -> step.v1.DecryptReply
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_step_v1_step_noauth_proto_init() }
func file_step_v1_step_noauth_proto_init() {
	if File_step_v1_step_noauth_proto != nil {
		return
	}
	file_step_v1_step_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_step_v1_step_noauth_proto_rawDesc), len(file_step_v1_step_noauth_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_step_v1_step_noauth_proto_goTypes,
		DependencyIndexes: file_step_v1_step_noauth_proto_depIdxs,
		MessageInfos:      file_step_v1_step_noauth_proto_msgTypes,
	}.Build()
	File_step_v1_step_noauth_proto = out.File
	file_step_v1_step_noauth_proto_goTypes = nil
	file_step_v1_step_noauth_proto_depIdxs = nil
}
